org: funguardian
app: expense-app
service: expense-app

frameworkVersion: "3"

custom:
  wsgi:
    app: app.app
  tableName: "expense-table-${self:provider.stage}"

provider:
  name: aws
  region: ap-southeast-1
  stage: dev
  timeout: 20
  runtime: python3.8
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - "s3:GetObject"
            - "s3:PutObject"
          Resource:
            - "arn:aws:s3:::123textract123/*"
        - Effect: Allow
          Action:
            - "textract:*"
          Resource:
            - "*"
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ExpenseTable, Arn]
  environment:
    USERS_TABLE: ${self:custom.tableName}

functions:
  document-to-text:
    handler: wsgi_handler.handler
    url: true

plugins:
  - serverless-wsgi
  - serverless-python-requirements

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}

package:
  patterns:
    - "!node_modules/**"
    - "!venv/**"
    - "!.serverless/**"
